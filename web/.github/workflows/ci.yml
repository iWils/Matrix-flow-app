name: CI

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}   # => ghcr.io/OWNER/REPO

jobs:
  test:
    name: Lint + Typecheck + Prisma validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      - name: Prisma validate
        run: npx prisma validate

  security:
    name: npm audit (sécurité packages)
    runs-on: ubuntu-latest
    needs: [test]
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: web/package-lock.json
      - run: npm ci
      - name: npm audit (en warning)
        run: npm audit --audit-level=moderate || true

  build_image:
    name: Build & Push image multi-arch
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta (tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=raw,enable={{is_default_branch}},value=latest

      - name: Build (and push on main)
        uses: docker/build-push-action@v6
        with:
          context: ./web
          file: web/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  trivy_image_scan:
    name: Trivy scan image
    runs-on: ubuntu-latest
    needs: [build_image]
    steps:
      - name: Install Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'image'
          image-ref: ghcr.io/${{ github.repository }}:${{ github.sha }}
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          format: 'table'
          exit-code: '0'   # ne bloque pas le pipeline
      - name: Trivy (CRITICAL en alerte non bloquante)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'image'
          image-ref: ghcr.io/${{ github.repository }}:${{ github.sha }}
          severity: 'CRITICAL'
          format: 'table'
          exit-code: '0'

  package_zip:
    name: Package ZIP (artefact)
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Créer l’archive
        run: |
          zip -r matrix-flow-nextjs.zip . -x '*.git*' -x 'node_modules/*' -x 'web/node_modules/*'
      - name: Upload artefact
        uses: actions/upload-artifact@v4
        with:
          name: matrix-flow-nextjs
          path: matrix-flow-nextjs.zip
          retention-days: 14
